% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_cw.R
\name{create_cw}
\alias{create_cw}
\title{Create Crosswalk between Two Sets of Spatial Features}
\usage{
create_cw(
  from_sf,
  to_sf,
  wts_sf,
  wt_var_name,
  check_that_wts_cover_from_and_to = TRUE,
  check_for_ak = TRUE,
  check_for_hi = TRUE
)
}
\arguments{
\item{from_sf}{An sf object representing the source features. Must
have columns named "geoid" and "geometry" with geometry of class
'sfc_MULTIPOLYGON'.}

\item{to_sf}{An sf object representing the target features. Must
have columns named "geoid" and "geometry" with geometry of class
'sfc_MULTIPOLYGON'.}

\item{wts_sf}{An sf object representing the weight features. Must
have columns named "geoid" and "geometry" with geometry of class
'sfc_MULTIPOLYGON'. It must have a column used for weighting. The
name for this weighting column must be passed to
\code{wt_var_name}. For area-based weighting, use the area of the
features in \code{wts_sf}.}

\item{wt_var_name}{A character string specifying the name of the
column in \code{wts_sf} to be used for weighting.}

\item{check_that_wts_cover_from_and_to}{A logical value indicating
whether to check that \code{wts_sf} completely covers both \code{from_sf} and
\code{to_sf} (default is TRUE).}

\item{check_for_ak}{A logical value indicating whether to check for
and handle Alaska specifically (default is TRUE).}

\item{check_for_hi}{A logical value indicating whether to check for
and handle Hawaii specifically (default is TRUE).}
}
\value{
A data.table containing the crosswalk between \code{from_sf} and \code{to_sf}.
}
\description{
This function generates a crosswalk between two sets of spatial features
(\code{from_sf} and \code{to_sf}) using a third set of spatial features (\code{wts_sf})
for weighting. The crosswalk maps \code{from_sf} to \code{to_sf} based on the
intersection with \code{wts_sf}, providing weights for how much of \code{from_sf}
intersects with \code{to_sf} relative to \code{wts_sf}.
}
\details{
The function performs the following steps:
\enumerate{
\item \strong{Input Validation:} Checks the classes and column names of the input sf
objects.
\item \strong{Data Preparation:} Converts sf objects to data.tables and renames
columns for consistency.
\item \strong{Alaska and Hawaii Handling:} If \code{check_for_ak} or \code{check_for_hi} is
TRUE, the function identifies and transforms the coordinate reference
systems (CRS) of Alaska and Hawaii polygons for accurate calculations.
\item \strong{Crosswalk Computation:}
\itemize{
\item Identifies 1:1 mappings where \code{to_sf} completely covers \code{from_sf}.
\item For the remaining \code{from_sf} polygons, it finds the \code{wts_sf} polygons
covered by both \code{from_sf} and \code{to_sf}.
\item Calculates the intersection of the relevant polygons from \code{from_sf},
\code{to_sf}, and \code{wts_sf}.
\item Determines the share of the \code{wt_var} for each \code{wts_sf} polygon that
relates to the intersection with \code{from_sf} and \code{to_sf}.
}
\item \strong{Output:} Returns a data.table containing the crosswalk with the
following columns:
\itemize{
\item \code{from_geoid}: The "geoid" from \code{from_sf}.
\item \code{to_geoid}: The "geoid" from \code{to_sf}.
\item \code{wt_var_name}: The weight variable from \code{wts_sf} (renamed from
\code{wt_var_name}).
\item \code{afact}: The allocation factor representing the share of the \code{wt_var}
that connects \code{from_geoid} to \code{to_geoid}.
}
}
}
\examples{
\dontrun{
# Assuming you have sf objects named from_sf, to_sf, and wts_sf
# with a weight variable named "population" in wts_sf

cw <- create_cw(from_sf, to_sf, wts_sf, "population")
}

}
